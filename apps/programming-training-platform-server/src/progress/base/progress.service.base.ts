/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Progress as PrismaProgress } from "@prisma/client";

export class ProgressServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.ProgressCountArgs, "select">): Promise<number> {
    return this.prisma.progress.count(args);
  }

  async progresses(
    args: Prisma.ProgressFindManyArgs
  ): Promise<PrismaProgress[]> {
    return this.prisma.progress.findMany(args);
  }
  async progress(
    args: Prisma.ProgressFindUniqueArgs
  ): Promise<PrismaProgress | null> {
    return this.prisma.progress.findUnique(args);
  }
  async createProgress(
    args: Prisma.ProgressCreateArgs
  ): Promise<PrismaProgress> {
    return this.prisma.progress.create(args);
  }
  async updateProgress(
    args: Prisma.ProgressUpdateArgs
  ): Promise<PrismaProgress> {
    return this.prisma.progress.update(args);
  }
  async deleteProgress(
    args: Prisma.ProgressDeleteArgs
  ): Promise<PrismaProgress> {
    return this.prisma.progress.delete(args);
  }
}
